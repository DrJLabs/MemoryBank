events {
    worker_connections 1024;
}

http {
    # SSL settings for upstream
    upstream portainer_https {
        server host.docker.internal:9443;
    }
    
    upstream portainer_http {
        server host.docker.internal:8000;
    }

    server {
        listen 80;
        server_name localhost;

        # Remove security headers that block iframe embedding
        proxy_hide_header X-Frame-Options;
        proxy_hide_header Content-Security-Policy;
        proxy_hide_header X-Content-Security-Policy;
        
        # Add permissive headers for dashboard integration
        add_header X-Frame-Options "ALLOWALL" always;
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization" always;

        # Proxy to HTTPS Portainer
        location /https/ {
            proxy_pass https://portainer_https/;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_redirect off;
        }

        # Proxy to HTTP Portainer (fallback)
        location /http/ {
            proxy_pass http://portainer_http/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto http;
            proxy_redirect off;
        }

        # Default to HTTPS
        location / {
            proxy_pass https://portainer_https/;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            proxy_redirect off;
        }
    }
} 