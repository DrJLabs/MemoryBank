---
# description: "Context7 Technical Implementation Protocol - MANDATORY: Use Context7 for ALL technical implementation"
alwaysApply: true
---

# Context7 Technical Implementation Protocol

## MANDATORY: Context7 for ALL Technical Implementation

### Triggers (Any of these = MUST use Context7)
- Framework/library names (React, Next.js, Vue, Angular, Django, FastAPI, etc.)
- Package installations (`npm install`, `pip install`, etc.)
- Import statements or code examples
- API integrations (Supabase, Auth0, Stripe, etc.)
- Configuration files (package.json, requirements.txt, etc.)
- Database queries and schemas
- Authentication/authorization implementations
- Testing, deployment, or DevOps

### Mandatory Workflow
1. **Detect** any technical trigger above
2. **Resolve** library IDs: `mcp_Context7_resolve-library-id("library-name")`
3. **Fetch** docs: `mcp_Context7_get-library-docs("/org/project", tokens=15000)`
4. **Generate** code ONLY from Context7 results
5. **Cite** Context7 as source

### Critical Rules
**NEVER:**
- Generate technical code from training data
- Use APIs without Context7 verification
- Skip Context7 for "simple" implementations

**ALWAYS:**
- Wait for Context7 before ANY technical code
- Use exact API signatures from Context7 docs
- Include proper imports and error handling
- Cite Context7 as authoritative source

### Enforcement
**CRITICAL ERROR:** Generating any technical implementation without Context7 verification.

**Bottom Line:** If it's technical â†’ Context7 is MANDATORY.
