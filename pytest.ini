# Pytest configuration for MemoryBank
# Enables parallel testing with proper isolation

[tool:pytest]
# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Parallel execution settings
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --maxfail=10
    # Parallel execution (uncomment to enable by default)
    # -n auto
    # Coverage reporting (uncomment to enable by default)
    --cov=mem0
    --cov=custom-gpt-adapter
    --cov=scripts
    --cov-report=term-missing
    --cov-report=html:reports/coverage
    --cov-fail-under=80

# Test markers
markers =
    unit: Unit tests (fast, no external dependencies)
    integration: Integration tests (database, external services)
    slow: Slow tests (>5 seconds, performance tests)
    smoke: Smoke tests (basic functionality validation)
    regression: Regression tests (bug fix validation)
    security: Security-focused tests
    api: API endpoint tests
    database: Database-specific tests
    vector: Vector/embedding-specific tests
    memory: Memory management tests

# Parallel execution configuration
# These settings optimize pytest-xdist for our ephemeral Postgres setup
junit_family = xunit2

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Timeout settings (prevent hanging tests)
timeout = 300
timeout_method = thread

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::UserWarning:testcontainers.*
    error::RuntimeWarning

# Environment variables for database connection to mem0 PostgreSQL
env = 
    POSTGRES_SERVER=localhost
    POSTGRES_PORT=8432
    POSTGRES_USER=postgres
    POSTGRES_PASSWORD=postgres
    POSTGRES_DB=postgres